/* tslint:disable */
/* eslint-disable */
/**
 * Alignment API
 * Django alignment PAI
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StatusEnum } from './StatusEnum';
import {
    StatusEnumFromJSON,
    StatusEnumFromJSONTyped,
    StatusEnumToJSON,
} from './StatusEnum';

/**
 * 
 * @export
 * @interface Alignment
 */
export interface Alignment {
    /**
     * 
     * @type {number}
     * @memberof Alignment
     */
    readonly id: number;
    /**
     * DNA sequence that you want to align
     * @type {string}
     * @memberof Alignment
     */
    searchSequence: string;
    /**
     * 
     * @type {Array<number>}
     * @memberof Alignment
     */
    searchGenomes: Array<number>;
    /**
     * 
     * @type {StatusEnum}
     * @memberof Alignment
     */
    status?: StatusEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof Alignment
     */
    matchedGenes: Array<number>;
}

/**
 * Check if a given object implements the Alignment interface.
 */
export function instanceOfAlignment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "searchSequence" in value;
    isInstance = isInstance && "searchGenomes" in value;
    isInstance = isInstance && "matchedGenes" in value;

    return isInstance;
}

export function AlignmentFromJSON(json: any): Alignment {
    return AlignmentFromJSONTyped(json, false);
}

export function AlignmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Alignment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'searchSequence': json['search_sequence'],
        'searchGenomes': json['search_genomes'],
        'status': !exists(json, 'status') ? undefined : StatusEnumFromJSON(json['status']),
        'matchedGenes': json['matched_genes'],
    };
}

export function AlignmentToJSON(value?: Alignment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'search_sequence': value.searchSequence,
        'search_genomes': value.searchGenomes,
        'status': StatusEnumToJSON(value.status),
        'matched_genes': value.matchedGenes,
    };
}

